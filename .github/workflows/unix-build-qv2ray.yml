name: Qv2ray build matrix - Unix

on: 
  push:
  release:
    types: [prereleased]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-16.04, macos-latest]
        qt_version: [5.12.6, 5.13.2, 5.14.1]
      fail-fast: false
        
    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checking out sources
        uses: actions/checkout@master
      - name: Restoring submodules
        run: git submodule update --init
# --------------------------------------------------------
      - name: ${{ matrix.platform }} - Installing Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
# --------------------------------------------------------
      - name: Linux - Install Packages 
        if: matrix.platform == 'ubuntu-16.04'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo add-apt-repository ppa:carsten-uppenbrink-net/openssl
          sudo apt update
          sudo apt install -y gcc-7 libgl-dev openssl libx11-dev libxkbcommon-x11-dev libprotobuf-dev protobuf-compiler protobuf-c-compiler

      - name: macOS - Install Packages
        if: matrix.platform == 'macos-latest'
        run: brew install protobuf
# --------------------------------------------------------
      - name: Linux - Download libqvb static library.
        if: matrix.platform == 'ubuntu-16.04'
        uses: Legion2/download-release-action@v2.1.0
        with:
          repository: Qv2ray/QvRPCBridge
          tag: 'latest'
          path: libs
          file: libqvb-linux64.a
# ==
      - name: macOS - Download libqvb static library.
        if: matrix.platform == 'macos-latest'
        run: curl -o ./libs/libqvb-darwin.a -L https://github.com/Qv2ray/QvRPCBridge/releases/download/v1.1/libqvb-darwin.a
# -------------------------------------------------------- Generate MakeFile
      - name: Cross-platform - ${{ matrix.qt_version }} - Generate Dependencies and Makefile
        shell: bash
        run: |
          ./tools/unix-generate-geosite.sh
          PATH=$PATH:$Qt5_Dir
          mkdir build
          cd build
          export _QV2RAY_BUILD_INFO_="Qv2ray built from Github Action"  
          export _QV2RAY_BUILD_EXTRA_INFO_="qt${{ matrix.qt_version }}--${{ github.sha }}"
          qmake .. CONFIG+=no_increase_build_number PREFIX=/usr
# -------------------------------------------------------- Build
      - name: Cross-platform - ${{ matrix.qt_version }} - Build Qv2ray
        shell: bash
        run: |
          cd build
          make -j2 $([ "${{ matrix.platform }}" == "ubuntu-16.04" ] && echo "CC=gcc-7 CXX=g++-7" LINK="g++-7" || echo "")
      - name: Linux - ${{ matrix.qt_version }} - Generating AppImage
        if: matrix.platform == 'ubuntu-16.04'
        run: | 
          cd build
          make install INSTALL_ROOT=AppDir
          cd AppDir
          mkdir -p ./usr/lib/
          cp /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 ./usr/lib/ 
          cd ..
          wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage
          chmod +x ./linuxdeployqt-6-x86_64.AppImage
          ./linuxdeployqt-6-x86_64.AppImage --appimage-extract 
          cd AppDir
          ../squashfs-root/AppRun usr/share/applications/qv2ray.desktop -appimage -no-strip -always-overwrite
          mv ./Qv2ray*.AppImage ./Qv2ray.AppImage
      - name: Linux - ${{ matrix.qt_version }} - Uploading artifact
        if: matrix.platform == 'ubuntu-16.04'
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray.linux-qt${{ matrix.qt_version }}-.AppImage
          path: build/AppDir/Qv2ray.AppImage
      - name: Linux - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release' && matrix.platform == 'ubuntu-16.04' && matrix.qt_version == '5.12.6'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/AppDir/Qv2ray.AppImage
          asset_name: Qv2ray-${{ github.ref }}-linux-qt${{ matrix.qt_version }}.AppImage
          tag: ${{ github.ref }}
          overwrite: true
# ==
      - name: macOS - ${{ matrix.qt_version }} - Making release tarball
        if: matrix.platform == 'macos-latest'
        run: |
          cd build
          cd qv2ray.app
          macdeployqt ./
          cd ..
          tar czf Qv2ray.app.tar.gz qv2ray.app
      - name: macOS - ${{ matrix.qt_version }} - Uploading Artifact
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray.macOS.app-qt${{ matrix.qt_version }}.zip
          path: build/Qv2ray.app.tar.gz
      - name: macOS - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release' && matrix.platform == 'macos-latest' && matrix.qt_version == '5.12.6'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/Qv2ray.app.tar.gz
          asset_name: Qv2ray-${{ github.ref }}-macOS-qt${{ matrix.qt_version }}.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
# -------------------------------------
